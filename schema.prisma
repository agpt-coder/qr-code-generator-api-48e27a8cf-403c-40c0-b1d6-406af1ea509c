// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()"))
  email     String    @unique
  hashedPassword String
  role      Role      @default(BasicUser)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  preferences UserPreferences?
  qrCodes   QRCode[]
}

model UserPreferences {
  id                  String              @id @default(dbgenerated("gen_random_uuid()"))
  userId              String              @unique
  defaultSize         Float               @default(2.0)
  defaultErrorCorrectionLevel ErrorCorrectionLevel @default(M)
  defaultOutputFormat OutputFormat       @default(SVG)
  user                User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
}

model QRCode {
  id                String            @id @default(dbgenerated("gen_random_uuid()"))
  data              String
  size              Float             @default(2.0)
  color             String            @default("black")
  backgroundColor   String            @default("white")
  errorCorrectionLevel ErrorCorrectionLevel @default(M)
  outputFormat      OutputFormat      @default(SVG)
  userId            String
  user              User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

enum Role {
  BasicUser
  PremiumUser
  Admin
}

enum OutputFormat {
  SVG
  PNG
}

enum ErrorCorrectionLevel {
  L // Low
  M // Medium
  Q // Quartile
  H // High
}

